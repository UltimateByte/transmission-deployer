#!/bin/bash
# Multiple transmission-daemon deployer
# Authors: UltimateByte
# Website: https://www.terageek.org
# Description: Creates new users and duplicates transmission-daemon for them
# Version: 0.01

# Don't use as such, this script is very incomplete

### SETTINGS ##
# The parent folder for your user's home directory (usually /home)
homedir="/home"

#############
## Program ##
#############

	
# User Input
echo "Enter a username"
echo "This username will also be used for transmission-daemon servicename"
read -r username

## Misc Variables ##
selfname="$(basename "$(readlink -f "${BASH_SOURCE[0]}")")"
# Transmission service name
tservice="debian-transmission"
# Transmission package name
deftransmission="transmission-daemon"
# Config file
cfgfile="settings.json"
# System directories
bindir="/usr/bin"
initdir="/etc/init.d"
libdir="/var/lib"
etcdir="/etc"
defdir="${etcdir}/default"
# Default transmission process full path
tdefprocess="${initdir}/${deftransmission}"
# Default transmission configdir
tdefcfgdir="${libdir}/${deftransmission}/info"

# User config
# User home directory
userdir="${homedir}/${username}"
# User download directory
downloadsdir="${userdir}/downloads"
# User incomplete directory
incompletedir="${userdir}/incomplete"
# User's transmission process name
tuprocess="${deftransmission}-${username}"
# User config file full patch
tuconfig="${etcdir}/${tuprocess}/${cfgfile}"
# User default config file
utlibconfig="${libdir}/${tuprocess}/info/${cfgfile}"
# User defdir
udefdir="${defdir}/${tuprocess}"
# User transmission configdir
ucfgdir="${libdir}/${tuprocess}/info"


# Stopping transmission
if [ -f "${tdefprocess}" ]; then
	echo "Stopping ${deftransmission}"
	"${tdefprocess}" stop
else
	echo "Please, install ${deftransmission} before running ${selfname}"
	exit 1
fi


echo "Create new transmission server for user: ${username} ?"
echo "Home direcotry for this user set to dir: ${userdir}"

# Prompt
while true; do
	read -r -e -i "y" -p "Continue? [Y/n]" yn
	case $yn in
	[Yy]* ) echo "Let's go!"; sleep 1; break;;
	[Nn]* ) echo "Maybe next time!"; exit 0;;
	* ) echo "Please answer yes or no.";;
esac
done

if [ "$(grep "${username}" /etc/passwd)" ]; then
	echo "User already exists, not creating it"
else
	
	# Adding user
	echo "Creating ${username}"
	useradd -m -d "${userdir}" "${username}"
	echo "User created"
	echo "Please, chose a password for ${username}"
	passwd "${username}"
fi

echo "Creating user's directories"
if [ -d "${downloadsdir}" ]; then
	mkdir -pv "${downloadsdir}"
fi
if [ -d "${incompletedir}" ]; then
	mkdir -pv "${incompletedir}"
fi
echo "Applying permissions"
chown "${username}":"${username}" "${userdir}"
chown -R "${username}":"${tservice}" "${downloadsdir}" "${incompletedir}"
chmod -R 770 "${downloadsdir}" "${incompletedir}"
# Don't add user to group for now, might fix permissions by editting init.d/transmission-daemon-username
# Doc http://askubuntu.com/questions/221081/permission-denied-when-downloading-with-transmission-deamon
#echo "Adding user ${username} to group ${tservice}"
#echo "Note: Will fix permission issues but allow this user to access other files from the group"
#usermod -a -G "${tservice}" "${username}"


### Dev notes
## Useful stuff as per https://fr.scribd.com/doc/242365178/How-to-Run-Multiple-Instances-of-Transmission-Daemon-in-Linux-Debian-or-Ubuntu
# cp /usr/bin/transmission-daemon /usr/bin/transmission-daemon2 
# cp /etc/init.d/transmission-daemon /etc/init.d/transmission-daemon2 
# cp -a /var/lib/transmission-daemon /var/lib/transmission-daemon2 
# cp -a /etc/transmission-daemon /etc/transmission-daemon2 
# cp /etc/default/transmission-daemon /etc/default/transmission-daemon2 
# chmod –R 777 /usr/bin/transmission-daemon2 
# chmod –R 777 /etc/init.d/transmission-daemon2 
# chmod –R 777 /var/lib/transmission-daemon2 
# chmod –R 777 /etc/transmission-daemon2
# chmod –R 777 /etc/default/transmission-daemon2

echo "Please, set transmission RPC password"
echo "Warning! No confirmation & won't be given back"
read -rs tpasswd
echo "Please, set an RPC port (default 9091)"
read -r trpcport

if [ -d "${bindir}/${tservice}" ]; then
	cp -v "${bindir}/${tservice}" "${bindir}/${tuprocess}"
else
	echo "Fatal error, could not find ${bindir}/${tservice}"
	exit 1
fi

if [ -d "${initdir}/${tservice}" ]; then
	cp -v "${initdir}/${tservice}" "${initdir}/${tuprocess}"
else
	echo "Fatal error, could not find ${initdir}/${tservice}"
	exit 1
fi

if [ -d "${libdir}/${tservice}" ]; then
	cp -av "${libdir}/${tservice}" "${libdir}/${tuprocess}"
else
	echo "Fatal error, could not find ${libdir}/${tservice}"
	exit 1
fi

if [ -d "${etcdir}/${tservice}" ]; then
	cp -av "${etcdir}/${tservice}" "${etcdir}/${tuprocess}"
else
	echo "Fatal error, could not find ${etcdir}/${tservice}"
	exit 1
fi

if [ -d "${defdir}/${tservice}" ]; then
	cp -v "${defdir}/${tservice}" "${defdir}/${tuprocess}"
else
	echo "Fatal error, could not find ${defdir}/${tservice}"
	exit 1
fi

if [ -d "${etcdir}/${tuprocess}" ]; then
	if [ ! -f "${tuconfig}" ]; then
		echo "Warning! No config file was found in ${etcdir}/${tuprocess}"
		echo "Creating config file"
		touch "${tuconfig}"
	fi
else
	echo "Fatal error, ${etcdir}/${tuprocess} was not successfully created"
	exit 1
fi

echo "\{
    \"alt-speed-down\": 50,
    \"alt-speed-enabled\": false,
    \"alt-speed-time-begin\": 540,
    \"alt-speed-time-day\": 127,
    \"alt-speed-time-enabled\": false,
    \"alt-speed-time-end\": 1020,
    \"alt-speed-up\": 50,
    \"bind-address-ipv4\": \"0.0.0.0\",
    \"bind-address-ipv6\": \"::\",
    \"blocklist-enabled\": false,
    \"blocklist-url\": \"http://www.example.com/blocklist\",
    \"cache-size-mb\": 4,
    \"dht-enabled\": true,
    \"download-dir\": \"${downloadsdir}\",
    \"download-limit\": 100,
    \"download-limit-enabled\": 0,
    \"download-queue-enabled\": true,
    \"download-queue-size\": 5,
    \"encryption\": 1,
    \"idle-seeding-limit\": 30,
    \"idle-seeding-limit-enabled\": false,
    \"incomplete-dir\": \"${incompletedir}\",
    \"incomplete-dir-enabled\": true,
    \"lpd-enabled\": false,
    \"max-peers-global\": 200,
    \"message-level\": 1,
    \"peer-congestion-algorithm\": \"\",
    \"peer-id-ttl-hours\": 6,
    \"peer-limit-global\": 200,
    \"peer-limit-per-torrent\": 50,
    \"peer-port\": 51413,
    \"peer-port-random-high\": 65535,
    \"peer-port-random-low\": 49152,
    \"peer-port-random-on-start\": true,
    \"peer-socket-tos\": \"default\",
    \"pex-enabled\": true,
    \"port-forwarding-enabled\": false,
    \"preallocation\": 1,
    \"prefetch-enabled\": 1,
    \"queue-stalled-enabled\": true,
    \"queue-stalled-minutes\": 30,
    \"ratio-limit\": 2,
    \"ratio-limit-enabled\": false,
    \"rename-partial-files\": true,
    \"rpc-authentication-required\": true,
    \"rpc-bind-address\": \"0.0.0.0\",
    \"rpc-enabled\": true,
    \"rpc-password\": \"${tpasswd}\",
    \"rpc-port\": ${trpcport},
    \"rpc-url\": \"/transmission/\",
    \"rpc-username\": \"${username}\",
    \"rpc-whitelist\": \"127.0.0.1\",
    \"rpc-whitelist-enabled\": false,
    \"scrape-paused-torrents-enabled\": true,
    \"script-torrent-done-enabled\": false,
    \"script-torrent-done-filename\": \"\",
    \"seed-queue-enabled\": false,
    \"seed-queue-size\": 10,
    \"speed-limit-down\": 12000,
    \"speed-limit-down-enabled\": false,
    \"speed-limit-up\": 500,
    \"speed-limit-up-enabled\": true,
    \"start-added-torrents\": true,
    \"trash-original-torrent-files\": false,
    \"umask\": 7,
    \"upload-limit\": 100,
    \"upload-limit-enabled\": 0,
    \"upload-slots-per-torrent\": 20,
    \"utp-enabled\": true
\}" > "${tuconfig}"

echo "Symlinking config file"
ln -vsf "${tuconfig}" "${utlibconfig}"

echo "Adjusting ${initdir}/${tuprocess} to fit user"
# Process name
sed -i "s/NAME=${deftransmission}/NAME=${tuprocess}/g" "${initdir}/${tuprocess}"
# Username
sed -i "s/USER=${tservice}/USER=${username}/g" "${initdir}/${tuprocess}"
sed -i "s/CONFIG_DIR=\"${tdefcfgdir}\"/CONFIG_DIR=\"${ucfgdir}\"/g" "${udefdir}"

# Process upon system boot
echo "Allowing ${tuprocess} to run on boot"
update-rc.d ${tuprocess} defaults

echo "All done"
echo "You can now try to run the daemon with:"
echo "./${initdir}/${tuprocess} start"
echo "Info:"
echo "Username: username"
echo "RPC Port: {trpcport}"
echo "Passwords: You set them."
echo "RPC URL: /transmission"
